<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.choongang.student.mapper.StudentMapper">
    <resultMap id="memberMap" type="org.choongang.student.entities.Student">
        <result column="STUDENT_NO" property="studentNo" />
        <result column="STUDENT_NM" property="studentNm" />
        <result column="MOBILE" property="mobile" />
        <result column="CLASS_ID" property="classId" />
    </resultMap>

    <!-- 학생 전체 목록 조회 -->
    <select id="getList" resultMap="StudentMap">
        <bind name="pStudentNo" value="'%' + _parameter.getStudentNo() + '%'" />
        <bind name="pStudentNm" value="'%' + _parameter.getStudentNm() + '%'" />
        <bind name="pClassId" value="'%' + _parameter.getClassId() + '%'" />
        SELECT * FROM (SELECT ROWNUM NUM, t.* FROM STUDENT t) m
        <where>
            <![CDATA[m.NUM >= {sRow} AND m.NUM <= {eRow}]]>
            <if test="studentNo != null">
                AND STUDENT_NO LIKE #{pStudentNo}
            </if>
            <if test="studentNm != null">
                AND STUDENT_NM LIKE #{pStudentNm}
            </if>
            <if test="classId != null">
                AND CONCAT(STUDENT_NO, STUDENT_NM) LIKE #{pClassId}
            </if>
        </where>
        ORDER BY mobile DESC
    </select>

    <!-- 학생 개별 조회 -->
    <select id="get" resultMap="studentMap">
        SELECT * FROM STUDENT
        <where>
            <if test="studentNo != null">
                STUDENT_NO=#{studentNo}
            </if>
        </where>
    </select>

    <!-- 학생 목록 갯수, 페이징 구현시 활용 가능 -->
    <select id="getTotal" resultType="long">
        <bind name="pStudentNo" value="'%' + _parameter.getStudentNo() + '%'" />
        <bind name="pStudentNm" value="'%' + _parameter.getStudentNm() + '%'" />
        <bind name="pClassId" value="'%' + _parameter.getClassId() + '%'" />
        SELECT COUNT(*) FROM STUDENT
        <where>
            <if test="studentNo != null">
                AND STUDENT_NO LIKE #{pStudentNo}
            </if>
            <if test="studentNm != null">
                AND STUDENT_NM LIKE #{pStudentNm}
            </if>
            <if test="classId != null">
                AND CONCAT(STUDENT_NO, STUDENT_NM) LIKE #{pClassId}
            </if>
        </where>
    </select>

    <!-- 학생 등록 여부 파악 - 갯수가 나오면 이미 등록으로 판단 -->
    <select id="exist" resultType="int">
        SELECT COUNT(*) FROM STUDENT WHERE STUDENT_NO=#{studentNo}
    </select>

    <!-- 학생 등록 -->
    <insert id="register">
        <selectKey keyProperty="studentNo" order="BEFORE" resultType="long">
            SELECT SEQ_STUDENT.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO STUDENT (STUDENT_NO, STUDENT_NM, MOBILE, CLASS_ID)
        VALUES (#{studentNo}, #{studentNm}, #{mobile}, #{classId})
    </insert>
</mapper>

<!-- XML : MyBatis 를 사용하여 학생 데이터베이스에 접근하기 위한 매퍼 파일 여러 SQL 쿼리들을 정의-->
<!--<mapper> : 매퍼 파일의 루트 요소 / namespace 속성은 이 매퍼가 어떤 인터페이스나 클래스에 매핑되는지를 나타냄 -->
<!--<resultMap> : 결과를 매핑하는 데 사용 / memberMap이라는 결과 매핑을 정의하여 Student 엔터티에 대한 매핑 지정 -->
<!--<select> : SELECT 쿼리 정의 / 학생 목록 조회, 개별 학생 조회, 학생 목록 갯수 조회 등을 나타냄 -->
<!--WHERE 조건을 동적으로 처리하기 위한 <if> 요소가 포함되어 있음 / 페이징을 구현하기 위해 ROWNUM을 사용하여 페이징된 결과를 가져옴-->
<!--<insert> : INSERT 쿼리 정의 -> 학생 등록하는 데 사용 / selectKey 요소를 사용하여 학생 번호를 생성하는 방법 지정-->
<!--MyBatis 사용하여 학생 관련 데이터베이스 작업을 수행하는데 필요한 SQL 쿼리들을 정의 -->